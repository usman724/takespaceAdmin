openapi: 3.0.3
info:
  title: TakeSpace REST API
  version: 0.1 (1a353b2@dev)
  description: Intelligent Training System
paths:
  /admin/v1/teacher-engagement/:
    get:
      operationId: admin_v1_teacher_engagement_retrieve
      summary: Get Teacher Engagement
      parameters:
      - in: query
        name: date_range
        schema:
          type: string
          enum:
          - 30d
          - 7d
          - all_time
          - last_year
          - today
          - yesterday
          default: 30d
        description: Filter by date range.
      - in: query
        name: grade
        schema:
          type: string
        description: Filter by grade ID.
      - in: query
        name: subject
        schema:
          type: string
        description: Filter by subject ID.
      - in: query
        name: teacher
        schema:
          type: string
        description: Filter by teacher ID.
      tags:
      - Admin - Analytics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherEngagement'
          description: ''
  /admin/v1/student-analytics/:
    get:
      operationId: admin_v1_student_analytics_retrieve
      summary: Get Student Analytics
      parameters:
      - in: query
        name: avg
        schema:
          type: string
          enum:
          - monthly
          - weekly
          default: weekly
        description: Filter by average type.
      - in: query
        name: date_range
        schema:
          type: string
          enum:
          - 30d
          - 7d
          - all_time
          - last_year
          - today
          - yesterday
          default: 30d
        description: Filter by date range.
      - in: query
        name: grade
        schema:
          type: string
        description: Filter by grade ID.
      - in: query
        name: page
        schema:
          type: integer
        description: A page number within the paginated result set.
      - in: query
        name: subject
        schema:
          type: string
        description: Filter by subject ID.
      - in: query
        name: teacher
        schema:
          type: string
        description: Filter by teacher ID.
      tags:
      - Admin - Analytics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnalytics'
          description: ''
  /admin/v1/teacher-analytics/{teacher_id}/:
    get:
      operationId: admin_v1_teacher_analytics_retrieve
      summary: Get Teacher Analytics
      parameters:
      - in: query
        name: date_range
        schema:
          type: string
          enum:
          - 30d
          - 7d
          - all_time
          - last_year
          - today
          - yesterday
          default: 30d
        description: Filter by date range.
      - in: query
        name: grade
        schema:
          type: string
        description: Filter by grade ID.
      - in: query
        name: subject
        schema:
          type: string
        description: Filter by subject ID.
      - in: path
        name: teacher_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Analytics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAnalytics'
          description: ''
  /admin/v1/subject-goals/:
    patch:
      operationId: admin_v1_subject_goals_partial_update
      description: Updates goals for all students in the specified subject and grade.
        This includes setting practice time goals, topics mastered goals, exam date,
        and current test scores which are used by the algorithm to recommend appropriate
        questions and track progress.
      summary: Update Subject Goals
      parameters:
      - in: query
        name: grade
        schema:
          type: string
        required: true
      - in: query
        name: subject
        schema:
          type: string
        required: true
      tags:
      - Admin - Analytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSubjectGoalsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSubjectGoalsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSubjectGoalsRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/organization/:
    get:
      operationId: admin_v1_organization_retrieve
      summary: Get Organization
      tags:
      - Admin - Organization
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: admin_v1_organization_partial_update
      summary: Update Organization
      tags:
      - Admin - Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/organization/logo/:
    patch:
      operationId: admin_v1_organization_logo_partial_update
      summary: Update Organization Logo
      tags:
      - Admin - Organization
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrganizationLogoRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/organization/contacts/:
    get:
      operationId: admin_v1_organization_contacts_list
      summary: List Account Contacts
      tags:
      - Admin - Organization
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountContact'
          description: ''
  /admin/v1/organization/contacts/{id}/:
    patch:
      operationId: admin_v1_organization_contacts_partial_update
      summary: Update Account Contact
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccountContactUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccountContactUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountContactUpdateRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/organization/update-password/:
    post:
      operationId: admin_v1_organization_update_password_create
      description: Updates the current user's password.
      summary: Update Password
      tags:
      - Admin - Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/students/{id}/teachers/{teacher_id}/:
    delete:
      operationId: admin_v1_students_teachers_destroy
      summary: Remove teacher from student
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: teacher_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/students/{id}/subjects/{subject_id}/remove/:
    delete:
      operationId: admin_v1_students_subjects_remove_destroy
      summary: Remove subject from student
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/teachers/{id}/subjects/{subject_id}/remove/:
    delete:
      operationId: admin_v1_teachers_subjects_remove_destroy
      summary: Remove subject from teacher
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherList'
          description: ''
  /admin/v1/teachers/:
    get:
      operationId: admin_v1_teachers_list
      summary: List Teachers
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: Search teachers by name, email or username.
      - in: query
        name: subjects
        schema:
          type: string
        description: Filter by comma-separated subject IDs.
      tags:
      - Admin - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherList'
          description: ''
    post:
      operationId: admin_v1_teachers_create
      summary: Create Teacher
      tags:
      - Admin - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeacherRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTeacherRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTeacherRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeacher'
          description: ''
  /admin/v1/teachers/update-password/:
    post:
      operationId: admin_v1_teachers_update_password_create
      description: Resets password for selected teachers.
      summary: Reset Teacher Passwords
      tags:
      - Admin - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherPasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeacherPasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeacherPasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/teachers/{id}/:
    get:
      operationId: admin_v1_teachers_retrieve
      description: Get comprehensive information about a specific teacher including
        analytics and progress data
      summary: Get Teacher Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDetail'
          description: ''
  /admin/v1/teachers/{id}/activate/:
    post:
      operationId: admin_v1_teachers_activate_create
      description: Activate a teacher account
      summary: Activate Teacher
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/teachers/{id}/deactivate/:
    post:
      operationId: admin_v1_teachers_deactivate_create
      description: Deactivate a teacher account
      summary: Deactivate Teacher
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/teachers/{id}/roster/:
    get:
      operationId: admin_v1_teachers_roster_list
      summary: List Teacher Roster
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherStudent'
          description: ''
  /admin/v1/teachers/{id}/subjects/:
    post:
      operationId: admin_v1_teachers_subjects_create
      summary: Add Subjects to Teacher
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSubjectsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddSubjectsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddSubjectsRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherList'
          description: ''
  /admin/v1/teachers/{id}/toggle-status/:
    post:
      operationId: admin_v1_teachers_toggle_status_create
      description: Toggle teacher active status
      summary: Toggle Teacher Status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleTeacherStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/students/:
    get:
      operationId: admin_v1_students_list
      summary: List Students
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Admin - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentListList'
          description: ''
    post:
      operationId: admin_v1_students_create
      summary: Create Student
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudent'
          description: ''
  /admin/v1/students/deactivate/:
    post:
      operationId: admin_v1_students_deactivate_create
      summary: Deactivate Students
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateStudentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeactivateStudentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeactivateStudentsRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/students/subjects/:
    get:
      operationId: admin_v1_students_subjects_retrieve
      summary: List Subjects
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: Search subjects by name.
      tags:
      - Admin - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSubject'
          description: ''
  /admin/v1/students/{id}/:
    delete:
      operationId: admin_v1_students_destroy
      summary: Delete Student
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
    put:
      operationId: admin_v1_students_update
      summary: Update Student (Full)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateStudentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateStudentRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
    patch:
      operationId: admin_v1_students_partial_update
      summary: Update Student (Partial)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentListRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/students/{id}/subjects/:
    post:
      operationId: admin_v1_students_subjects_create
      summary: Add Subjects to Student
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSubjectsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddSubjectsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddSubjectsRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentList'
          description: ''
  /admin/v1/students/{id}/teachers/:
    post:
      operationId: admin_v1_students_teachers_create
      summary: Add Teachers To Student
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTeachersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddTeachersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddTeachersRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/students/{id}/toggle-status/:
    post:
      operationId: admin_v1_students_toggle_status_create
      description: Toggle student active status
      summary: Toggle Student Status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleStudentStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleStudentStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleStudentStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /admin/v1/leaderboards/:
    get:
      operationId: admin_v1_leaderboards_list
      summary: List Leaderboards
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Admin - Leaderboards
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeaderboardList'
          description: ''
    post:
      operationId: admin_v1_leaderboards_create
      summary: Create Leaderboard
      tags:
      - Admin - Leaderboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeaderboardRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeaderboardRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leaderboard'
          description: ''
  /admin/v1/leaderboards/{id}/:
    get:
      operationId: admin_v1_leaderboards_retrieve
      summary: Get Leaderboard
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Leaderboards
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leaderboard'
          description: ''
  /admin/v1/leaderboards/{id}/end/:
    post:
      operationId: admin_v1_leaderboards_end_create
      description: End leaderboard early. Leaderboard must be active.
      summary: End Leaderboard
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Leaderboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeaderboardRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeaderboardRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leaderboard'
          description: ''
  /admin/v1/leaderboards/{id}/results/:
    get:
      operationId: admin_v1_leaderboards_results_retrieve
      description: Get detailed leaderboard results with student progress, teacher
        info, and participant groups.
      summary: Get Leaderboard Results
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin - Leaderboards
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardResults'
          description: ''
  /admin/v1/leaderboards/{id}/top-users/:
    get:
      operationId: admin_v1_leaderboards_top_users_list
      description: Get top 3 users with their profile information and achievements.
      summary: Get Top 3 Users
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Admin - Leaderboards
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopUsersList'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      description: Authenticate user and return JWT tokens. Users must complete profile
        setup before they can log in.
      summary: Login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          description: No response body
  /api/v1/auth/refresh/:
    post:
      operationId: api_v1_auth_refresh_create
      description: Refresh JWT access token using refresh token.
      summary: Refresh Auth Token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/verify/:
    post:
      operationId: api_v1_auth_verify_create
      description: Verify if JWT token is valid.
      summary: Verify Auth Token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          description: No response body
  /api/v1/auth/resend-verification-email/:
    post:
      operationId: api_v1_auth_resend_verification_email_create
      description: 'Resends the email verification email. Rate limit: 5/day'
      summary: Resend Verification Email
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          description: No response body
  /api/v1/auth/forgot-password/:
    post:
      operationId: api_v1_auth_forgot_password_create
      description: Sends a password reset email to the current user.
      summary: Forgot Password
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/resend-forgot-password-token/:
    post:
      operationId: api_v1_auth_resend_forgot_password_token_create
      description: Resends a new password reset token to the user's email. This is
        useful when the previous token expired or the user didn't receive the email.
      summary: Resend Forgot Password Token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendForgotPasswordTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendForgotPasswordTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendForgotPasswordTokenRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password reset token resent successfully
                type: object
                properties:
                  statusCode:
                    type: integer
                  data:
                    type: object
                  message:
                    type: string
                  error:
                    type: 'null'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request - validation error or rate limit exceeded
                type: object
                properties:
                  statusCode:
                    type: integer
                  data:
                    type: 'null'
                  message:
                    type: string
                  error:
                    type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: User not found
                type: object
                properties:
                  statusCode:
                    type: integer
                  data:
                    type: 'null'
                  message:
                    type: string
                  error:
                    type: object
          description: ''
        '429':
          content:
            application/json:
              schema:
                description: Too many requests - rate limit exceeded
                type: object
                properties:
                  statusCode:
                    type: integer
                  data:
                    type: 'null'
                  message:
                    type: string
                  error:
                    type: object
          description: ''
  /api/v1/auth/verify-password-reset-token/:
    post:
      operationId: api_v1_auth_verify_password_reset_token_create
      description: Verifies password reset tokens sent via email.
      summary: Verify Password Reset Token
      parameters:
      - in: query
        name: token
        schema:
          type: string
        description: The token being verified
        required: true
      tags:
      - Authentication
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/reset-password/:
    post:
      operationId: api_v1_auth_reset_password_create
      description: Resets the user's password. User must have verified their token
        in the previous step.
      summary: Reset Password
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/signup/create-account/:
    post:
      operationId: api_v1_auth_signup_create_account_create
      description: First step of signup - creates basic user account with name, email,
        date of birth, and password.
      summary: 'Step 1: Create Account'
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCreationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCreationRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreation'
          description: ''
  /api/v1/auth/signup/{id}/setup-profile/:
    post:
      operationId: api_v1_auth_signup_setup_profile_create
      description: Second step of signup - completes profile setup with role-specific
        information and returns JWT tokens.
      summary: 'Step 2: Setup Profile'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSetupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileSetupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileSetupRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSetup'
          description: ''
  /api/v1/users/me/feed/:
    get:
      operationId: api_v1_users_me_feed_list
      summary: Get My Feed
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Users
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/users/signup/:
    post:
      operationId: api_v1_users_signup_create
      description: Creates a new user.
      summary: Signup
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'
          description: ''
  /api/v1/users/{id}/block/:
    post:
      operationId: api_v1_users_block_create
      description: Blocks the specified user. Blocked user cannot follow or see the
        blocker's profile
      summary: Block User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Users
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/users/{id}/report/:
    post:
      operationId: api_v1_users_report_create
      description: Reports the specified user.
      summary: Report User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserReportRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReport'
          description: ''
  /api/v1/users/me/follow/:
    post:
      operationId: api_v1_users_me_follow_create
      description: Follows/Unfollows the specific user. Both users must be students.
      summary: Follow/Unfollow User
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FollowRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FollowRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/users/me/followers/:
    get:
      operationId: api_v1_users_me_followers_list
      description: Returns a list of the current user's followers. User must be a
        student.
      summary: List Followers
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Users
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentFollowerList'
          description: ''
  /api/v1/users/me/following/:
    get:
      operationId: api_v1_users_me_following_list
      description: Returns a list of the current user's following. User must be a
        student.
      summary: List Following
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Users
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentFollowerList'
          description: ''
  /api/v1/users/me/info/:
    get:
      operationId: api_v1_users_me_info_retrieve
      description: Returns a basic set of info for the current user.
      summary: Get My Info
      tags:
      - Users
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicUser'
          description: ''
  /api/v1/users/me/search-for-friends/:
    get:
      operationId: api_v1_users_me_search_for_friends_list
      description: Searches students by name, username or email.
      summary: Search For Friends
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: query
        schema:
          type: string
        description: The query used for search.
      tags:
      - Users
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentFollowerList'
          description: ''
  /api/v1/users/me/set-grade/:
    post:
      operationId: api_v1_users_me_set_grade_create
      description: Sets the grade for the current user. User must be a student
      summary: Set My Grade (Student)
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeSetRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/users/me/set-mode/:
    post:
      operationId: api_v1_users_me_set_mode_create
      description: Sets the system mode for the current user.
      summary: Set My Mode
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSetModeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSetModeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSetModeRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/users/me/toggle-notifications/:
    post:
      operationId: api_v1_users_me_toggle_notifications_create
      description: Enable or disable all notifications for the current user.
      summary: Toggle Notifications
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationToggleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserNotificationToggleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserNotificationToggleRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/users/me/update-info/:
    patch:
      operationId: api_v1_users_me_update_info_partial_update
      description: Updates the current user's info. Only supplied fields are updated.
      summary: Update My Info
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUserRequest'
            examples:
              Example:
                value:
                  first_name: Jane
                  last_name: Doe
                  email: jane.doe@example.com
                  username: JaneDoe
                summary: Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUserRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
              examples:
                Example:
                  value:
                    first_name: Jane
                    last_name: Doe
                    email: jane.doe@example.com
                    username: JaneDoe
                  summary: Example
          description: ''
  /api/v1/users/me/update-notifications/:
    patch:
      operationId: api_v1_users_me_update_notifications_partial_update
      description: Updates the current user's notification settings. Only supplied
        fields are updated.
      summary: Update My Notification Settings
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationSettingsUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationSettingsUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationSettingsUpdateRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/users/me/update-password/:
    post:
      operationId: api_v1_users_me_update_password_create
      description: Updates the current user's password. Requires current password
        for verification.
      summary: Update My Password
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          description: No response body
  /api/v1/users/me/upload-profile-pic/:
    post:
      operationId: api_v1_users_me_upload_profile_pic_create
      description: Uploads a new profile picture for the current user. Replaces any
        existing profile picture.
      summary: Upload Profile Picture
      tags:
      - Users
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadProfilePicRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicUser'
          description: ''
  /api/v1/users/me/verify-parent-pin/:
    post:
      operationId: api_v1_users_me_verify_parent_pin_create
      description: Verifies that the entered parent PIN is valid for the logged in
        student.
      summary: Verify Parent PIN
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentPinVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParentPinVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParentPinVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Parent PIN is valid
          description: ''
  /api/v1/students/stream-topics/:
    get:
      operationId: api_v1_students_stream_topics_retrieve
      description: Returns recommended topics for auto mode practice based on the
        Stream Shaping Algorithm. Returns only one topic with enhanced data including
        grade info, video URL, last quiz score, and activity data.
      summary: Get Stream Topics for Auto Mode
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTopic'
          description: ''
  /api/v1/students/suggested-friends/:
    get:
      operationId: api_v1_students_suggested_friends_list
      description: Returns a list of students as suggested friends for the current
        user (student).
      summary: List Suggested Friends
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSuggestedFriendList'
          description: ''
  /api/v1/students/{id}/achievements/:
    get:
      operationId: api_v1_students_achievements_list
      description: Returns a list of achievements for the supplied student.
      summary: List Student Achievements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentAchievementList'
          description: ''
  /api/v1/students/{id}/activity/:
    get:
      operationId: api_v1_students_activity_retrieve
      description: Returns the specified student's activity.
      summary: Get Student Activity
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      - in: query
        name: subject_id
        schema:
          type: string
        description: Filter by subject ID
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentActivity'
          description: ''
  /api/v1/students/{id}/add-friend/:
    post:
      operationId: api_v1_students_add_friend_create
      description: Adds given student as friend.
      summary: Add Friend (Student)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          description: No response body
  /api/v1/students/{id}/badges/:
    get:
      operationId: api_v1_students_badges_list
      description: Returns a list of badges for the specified student.
      summary: List Student Badges
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBadgeList'
          description: ''
  /api/v1/students/{id}/mastery-percentages/:
    get:
      operationId: api_v1_students_mastery_percentages_list
      description: Returns a list of mastery percentages for the supplied student.
        Special ID "me" may be used to select the current student instead.
      summary: List Student Subject Mastery Percentages
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique string identifying this student.Special ID "me" may
          be used to identify the current student.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentSubjectMasteryList'
          description: ''
  /api/v1/students/{id}/profile/:
    get:
      operationId: api_v1_students_profile_retrieve
      description: Returns data related to the specified student's profile.
      summary: Student Public Profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPublicProfile'
          description: ''
  /api/v1/students/{id}/time-practiced/:
    get:
      operationId: api_v1_students_time_practiced_retrieve
      description: Returns time practiced by supplied student.
      summary: Get Time Practiced
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentTimePracticed'
          description: ''
  /api/v1/students/{id}/topics-mastered/:
    get:
      operationId: api_v1_students_topics_mastered_retrieve
      description: Returns topics mastered by supplied student.
      summary: Get Topics Mastered
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentTopicsMastered'
          description: ''
  /api/v1/students/{id}/xp-statistics/:
    get:
      operationId: api_v1_students_xp_statistics_retrieve
      description: Returns the supplied student's XP statistics.
      summary: Get XP Statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Students
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentXPStatistics'
          description: ''
  /api/v1/subjects/:
    get:
      operationId: api_v1_subjects_list
      description: Returns a list of subjects with progress, status, and quest information.
      summary: List Subjects
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicSubjectList'
          description: ''
  /api/v1/subjects/{id}/:
    get:
      operationId: api_v1_subjects_retrieve
      description: Returns an individual subject by ID with progress, status, and
        quest information.
      summary: Get Subject
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSubject'
          description: ''
  /api/v1/units/:
    get:
      operationId: api_v1_units_list
      description: Returns a list of units.
      summary: List Units
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Units
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicUnitList'
          description: ''
  /api/v1/units/{id}/:
    get:
      operationId: api_v1_units_retrieve
      description: Returns an individual unit by ID.
      summary: Get Unit
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Units
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicUnit'
          description: ''
  /api/v1/topics/:
    get:
      operationId: api_v1_topics_list
      description: Returns a list of topics.
      summary: List Topics
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Topics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicTopicList'
          description: ''
  /api/v1/topics/topics/:
    post:
      operationId: api_v1_topics_topics_create
      description: Sets the topics for the current user. User must be a solo student
      summary: Set My Topics (Student)
      tags:
      - Topics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetStudentTopicsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetStudentTopicsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetStudentTopicsRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/topics/{id}/:
    get:
      operationId: api_v1_topics_retrieve
      description: Returns an individual topic by ID.
      summary: Get Topic
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Topics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicTopic'
          description: ''
  /api/v1/topics/{id}/quiz/:
    post:
      operationId: api_v1_topics_quiz_create
      description: Start a quiz for the given topic.
      summary: Start Quiz
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Topics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicQuiz'
          description: ''
  /api/v1/sessions/:
    post:
      operationId: api_v1_sessions_create
      description: Creates a new session.
      summary: Create Session
      tags:
      - Practice Sessions
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicPracticeSession'
          description: ''
  /api/v1/sessions/{id}/:
    get:
      operationId: api_v1_sessions_retrieve
      description: Returns an individual session by ID.
      summary: Get Session
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Practice Sessions
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicPracticeSession'
          description: ''
  /api/v1/sessions/{id}/toggle-activity/:
    patch:
      operationId: api_v1_sessions_toggle_activity_partial_update
      description: Toggles session activity on and off.
      summary: Toggle Session Activity
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Practice Sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPracticeSessionToggleActivityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPracticeSessionToggleActivityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPracticeSessionToggleActivityRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/quizzes/{id}/:
    get:
      operationId: api_v1_quizzes_retrieve
      description: Returns an individual quiz by ID.
      summary: Get Quiz
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quizzes
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicQuiz'
          description: ''
  /api/v1/quizzes/{id}/end/:
    patch:
      operationId: api_v1_quizzes_end_partial_update
      description: Ends a quiz and returns the results.
      summary: End Quiz
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quizzes
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicQuiz'
          description: ''
  /api/v1/quizzes/{id}/results/:
    get:
      operationId: api_v1_quizzes_results_retrieve
      description: Returns the detailed results of a completed quiz including score,
        percentage, and individual answer breakdown.
      summary: Get Quiz Results
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quizzes
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResults'
          description: ''
  /api/v1/grades/:
    get:
      operationId: api_v1_grades_list
      description: Returns a list of grades.
      summary: List Grades
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Grades
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
  /api/v1/teacher/student-analytics/:
    get:
      operationId: api_v1_teacher_student_analytics_retrieve
      summary: Get Student Analytics
      parameters:
      - in: query
        name: date_range
        schema:
          type: string
          enum:
          - 30d
          - 7d
          - all_time
          - last_year
          - today
          - yesterday
          default: 30d
        description: Filter by date range.
      - in: query
        name: grade
        schema:
          type: string
        description: Filter by grade ID.
      - in: query
        name: subject
        schema:
          type: string
        description: Filter by subject ID.
      tags:
      - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnalyticsForTeacher'
          description: ''
  /api/v1/subjects/{subject_id}/units/:
    get:
      operationId: api_v1_subjects_units_list
      description: Returns a list of units for a specific subject.
      summary: List Subject Units
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: subject_id
        schema:
          type: string
        required: true
      tags:
      - Units
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicUnitList'
          description: ''
  /api/v1/subjects/{subject_id}/students/:
    get:
      operationId: api_v1_subjects_students_list
      description: Returns a list of subject analytics for a specific subject.
      summary: List Student's Subject Analytics
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDetailedStudentSubjectList'
          description: ''
  /api/v1/subjects/{subject_id}/students/analytics/:
    get:
      operationId: api_v1_subjects_students_analytics_retrieve
      description: Returns overall analytics for the subject across all students.
      summary: Get Subject Analytics
      parameters:
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedStudentSubject'
          description: ''
  /api/v1/subjects/{subject_id}/students/{student_id}/question-analytics/:
    get:
      operationId: api_v1_subjects_students_question_analytics_retrieve
      description: Returns questions answered in last 7 days as well as correct and
        wrong answers.
      summary: Get Student Question Analytics
      parameters:
      - in: path
        name: student_id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectQuestionAnalytics'
          description: ''
  /api/v1/subjects/{subject_id}/students/{student_id}/goals/:
    get:
      operationId: api_v1_subjects_students_goals_retrieve
      description: Returns subject goals for the specified student.
      summary: Get Student Subject Goals
      parameters:
      - in: path
        name: student_id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubjectGoals'
          description: ''
  /api/v1/subjects/{subject_id}/students/{student_id}/topic-analytics/:
    get:
      operationId: api_v1_subjects_students_topic_analytics_retrieve
      summary: Get Topics By Level of Mastery
      parameters:
      - in: path
        name: student_id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Subjects
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentTopicMasteryLevel'
          description: ''
  /api/v1/subjects/{subject_id}/students/{student_id}/update-goals/:
    put:
      operationId: api_v1_subjects_students_update_goals_update
      description: Updates the current student's goals for the supplied subject. This
        includes setting the desired exam mark, current test score, and exam date
        which are used by the algorithm to recommend appropriate questions and track
        progress.
      summary: Update My Subject Goals (Student)
      parameters:
      - in: path
        name: student_id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectGoalsUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectGoalsUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectGoalsUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          description: No response body
  /api/v1/units/{unit_id}/topics/:
    get:
      operationId: api_v1_units_topics_list
      description: Returns a list of topics for a specific unit.
      summary: List Unit Topics
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: unit_id
        schema:
          type: string
        required: true
      tags:
      - Topics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicTopicList'
          description: ''
  /api/v1/topics/{topic_id}/questions/:
    get:
      operationId: api_v1_topics_questions_list
      description: Returns a list of questions for a specific topic.
      summary: List Topic Questions
      parameters:
      - in: query
        name: category
        schema:
          type: string
          enum:
          - practice
          - quiz
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: topic_id
        schema:
          type: string
        required: true
      tags:
      - Topic Questions
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicTopicQuestionList'
          description: ''
  /api/v1/topics/{topic_id}/questions/{id}/answers/:
    post:
      operationId: api_v1_topics_questions_answers_create
      description: Creates an answer for a specific topic question.
      summary: Create Topic Answer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic question.
        required: true
      - in: path
        name: topic_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicTopicAnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicTopicAnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasicTopicAnswerRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicTopicAnswer'
          description: ''
  /api/v1/topics/{topic_id}/questions/{id}/hint/:
    get:
      operationId: api_v1_topics_questions_hint_retrieve
      description: Returns the hint for the specified question
      summary: Get Question Hint
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic question.
        required: true
      - in: path
        name: topic_id
        schema:
          type: integer
        required: true
      tags:
      - Topic Questions
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionHint'
          description: ''
  /api/v1/topics/{topic_id}/answers/:
    get:
      operationId: api_v1_topics_answers_list
      description: Returns a list of answers for a specific topic.
      summary: List Topic Answers
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: topic_id
        schema:
          type: string
        required: true
      tags:
      - Topic Answers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicTopicAnswerList'
          description: ''
  /api/v1/topics/{topic_id}/answers/{id}/:
    get:
      operationId: api_v1_topics_answers_retrieve
      description: Returns an individual answer by topic and answer IDs.
      summary: Get Topic Answer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic answer.
        required: true
      - in: path
        name: topic_id
        schema:
          type: string
        required: true
      tags:
      - Topic Answers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicTopicAnswer'
          description: ''
  /api/v1/topics/{topic_id}/students/:
    get:
      operationId: api_v1_topics_students_list
      description: Returns a list of student analytics for a specific topic.
      summary: List Student Topic Analytics
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: topic_id
        schema:
          type: string
        required: true
      tags:
      - Student Topics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicStudentTopicList'
          description: ''
  /api/v1/topics/{topic_id}/students/{student_id}/:
    get:
      operationId: api_v1_topics_students_retrieve
      description: Returns an individual topic analytics record for a specific topic.
      summary: Get Student Topic Analytics
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      - in: path
        name: topic_id
        schema:
          type: string
        required: true
      tags:
      - Student Topics
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicStudentTopic'
          description: ''
  /api/v1/topics/{topic_id}/questions/{question_id}/answers/:
    get:
      operationId: api_v1_topics_questions_answers_list
      description: Returns a list of questions for a specific topic.
      summary: List Topic Questions
      parameters:
      - in: query
        name: category
        schema:
          type: string
          enum:
          - practice
          - quiz
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: topic_id
        schema:
          type: string
        required: true
      tags:
      - Topic Questions
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicTopicQuestionList'
          description: ''
  /api/v1/topics/{topic_id}/questions/{question_id}/answers/{id}/answers/:
    post:
      operationId: api_v1_topics_questions_answers_answers_create
      description: Creates an answer for a specific topic question.
      summary: Create Topic Answer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic question.
        required: true
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: topic_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicTopicAnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicTopicAnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasicTopicAnswerRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicTopicAnswer'
          description: ''
  /api/v1/topics/{topic_id}/questions/{question_id}/answers/{id}/hint/:
    get:
      operationId: api_v1_topics_questions_answers_hint_retrieve
      description: Returns the hint for the specified question
      summary: Get Question Hint
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic question.
        required: true
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: topic_id
        schema:
          type: integer
        required: true
      tags:
      - Topic Questions
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionHint'
          description: ''
  /api/v1/teacher/subjects/{subject_id}/grades/{grade_id}/students/:
    get:
      operationId: api_v1_teacher_subjects_grades_students_list
      description: Returns a list of students for the specified subject and grade.
      summary: List Grade Students
      parameters:
      - in: path
        name: grade_id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherStudentSubject'
          description: ''
  /api/v1/teacher/students/{student_id}/progress/{subject_id}/:
    get:
      operationId: api_v1_teacher_students_progress_retrieve
      summary: Get Student Subject Progress
      parameters:
      - in: path
        name: student_id
        schema:
          type: integer
        required: true
      - in: path
        name: subject_id
        schema:
          type: integer
        required: true
      tags:
      - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentProgress'
          description: ''
  /api/v1/teacher/account/:
    get:
      operationId: api_v1_teacher_account_retrieve
      description: Gets current solo teacher's account. User must be a solo teacher.
      summary: Get Solo Teacher Account
      tags:
      - Teachers
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoloTeacherAccount'
          description: ''
    patch:
      operationId: api_v1_teacher_account_partial_update
      description: Updates current solo teacher's account. User must be a solo teacher.
      summary: Update Solo Teacher Account
      tags:
      - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSoloTeacherAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSoloTeacherAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSoloTeacherAccountRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/teacher/account/logo/:
    patch:
      operationId: api_v1_teacher_account_logo_partial_update
      summary: Update Solo Teacher Account Logo
      tags:
      - Teachers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSoloTeacherAccountLogoRequest'
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/quests/:
    get:
      operationId: api_v1_quests_list
      description: Returns a list of quests for the current student.
      summary: List Quests
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Quests
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasicQuestList'
              examples:
                Example:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 0
                      challenger: 0
                      opponent: 0
                      time_limit: 5 00:00:00
                      time_limit_readable: 5 days
                      subject:
                        id: 0
                        name: string
                      topics:
                      - id: 0
                        name: string
                        unit: 0
          description: ''
  /api/v1/quests/{id}/:
    get:
      operationId: api_v1_quests_retrieve
      description: Returns an individual quest for the current student by ID.
      summary: Get Quest
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quests
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestDetail'
              examples:
                QuestDetailExample:
                  value:
                    id: 0
                    challenger:
                      user:
                        id: 0
                        first_name: string
                        last_name: string
                        avatar_url: string
                      student_id: 0
                      xp_points: 100
                      topics_progress:
                      - id: 0
                        name: string
                        unit: string
                        status: green
                        score: 85.5
                        total_answers: 20
                        correct_answers: 17
                        is_mastered: true
                        last_practiced: '2024-01-01T10:00:00Z'
                        days_since_last_practice: 2
                      total_topics: 5
                      mastered_topics: 3
                      overall_progress_percentage: 60.0
                    opponent:
                      user:
                        id: 0
                        first_name: string
                        last_name: string
                        avatar_url: string
                      student_id: 0
                      xp_points: 120
                      topics_progress:
                      - id: 0
                        name: string
                        unit: string
                        status: yellow
                        score: 70.0
                        total_answers: 15
                        correct_answers: 10
                        is_mastered: false
                        last_practiced: '2024-01-02T14:30:00Z'
                        days_since_last_practice: 1
                      total_topics: 5
                      mastered_topics: 2
                      overall_progress_percentage: 40.0
                    time_limit: 5 00:00:00
                    time_limit_readable: 5 days
                    subject:
                      id: 0
                      name: string
                    topics:
                    - id: 0
                      name: string
                      unit: 0
                    is_completed: false
                    challenger_score: 0
                    opponent_score: 0
                    winner: null
                  summary: Quest Detail Example
          description: ''
  /api/v1/quests/{id}/message-opponent/:
    post:
      operationId: api_v1_quests_message_opponent_create
      description: Sends a message to the opponent of the specified quest.
      summary: Message Opponent
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestMessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestMessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestMessageRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/quests/{id}/nudge/:
    post:
      operationId: api_v1_quests_nudge_create
      description: Nudges the opponent in the specified quest.
      summary: Nudge Opponent
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quests
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/quests/{id}/send-gift/:
    post:
      operationId: api_v1_quests_send_gift_create
      description: Sends a gift in the form of XP boost to the opponent of the specified
        quest.
      summary: Send Gift
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Quests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestSendGiftRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestSendGiftRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestSendGiftRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '204':
          description: No response body
  /api/v1/payments/intents/:
    post:
      operationId: api_v1_payments_intents_create
      description: Creates a Stripe Payment Intent.
      summary: Create Payment Intent
      tags:
      - api
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/leagues/latest-round/:
    get:
      operationId: api_v1_leagues_latest_round_retrieve
      description: Returns the latest league round for the current student.
      summary: Get Latest League Round (Student)
      tags:
      - Leagues
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueRound'
          description: ''
  /api/v1/leaderboards/:
    get:
      operationId: api_v1_leaderboards_list
      summary: List Leaderboards (Student)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentLeaderboardList'
          description: ''
  /api/v1/support/tickets/:
    post:
      operationId: api_v1_support_tickets_create
      summary: Create Support Ticket
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportTicketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupportTicketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupportTicketRequest'
        required: true
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
  /api/v1/support/tickets/{id}/:
    get:
      operationId: api_v1_support_tickets_retrieve
      summary: Get Support Ticket
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
  /api/v1/support/articles/:
    get:
      operationId: api_v1_support_articles_list
      description: Lists published support articles.
      summary: List Support Articles
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
        description: JWT token authentication. Include 'Bearer ' prefix with your
          token.
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupportArticleList'
          description: ''
components:
  schemas:
    AccountContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 15
        organization_role:
          type: string
          readOnly: true
      required:
      - email
      - full_name
      - id
      - organization_role
    AccountCreation:
      type: object
      description: |-
        Serializer for the first step of signup - account creation.
        Handles basic user information: name, email, date of birth, and password.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        date_of_birth:
          type: string
          format: date
          nullable: true
      required:
      - email
      - first_name
      - id
      - last_name
    AccountCreationRequest:
      type: object
      description: |-
        Serializer for the first step of signup - account creation.
        Handles basic user information: name, email, date of birth, and password.
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 200
        last_name:
          type: string
          minLength: 1
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        date_of_birth:
          type: string
          format: date
          nullable: true
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
      required:
      - email
      - first_name
      - last_name
      - password
    AddSubjectsRequest:
      type: object
      properties:
        subject_ids:
          type: array
          items:
            type: integer
      required:
      - subject_ids
    AddTeachersRequest:
      type: object
      properties:
        teacher_ids:
          type: array
          items:
            type: integer
      required:
      - teacher_ids
    Badge:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/BadgeTypeEnum'
        type_label:
          type: string
          readOnly: true
        amount:
          type: integer
          maximum: 32767
          minimum: 0
        target_amount:
          type: string
          readOnly: true
        level:
          type: integer
          maximum: 10
          minimum: 1
        image_url:
          type: string
          readOnly: true
      required:
      - image_url
      - name
      - target_amount
      - type
      - type_label
    BadgeTypeEnum:
      enum:
      - earned_n_xp
      - reached_n_days_streak
      - won_n_quests
      - earned_n_xp_in_month
      - completed_n_topics_on_weekends
      - reached_highest_league_n_times
      - completed_n_topics_without_mistakes
      - finished_first_in_highest_league
      - have_n_friends
      - added_profile_picture
      type: string
      description: |-
        * `earned_n_xp` - Earned N XP
        * `reached_n_days_streak` - Reached N Days Streak
        * `won_n_quests` - Won N Quests
        * `earned_n_xp_in_month` - Earned N XP in a Month
        * `completed_n_topics_on_weekends` - Completed N Topics on Weekends
        * `reached_highest_league_n_times` - Reached Highest League N Times
        * `completed_n_topics_without_mistakes` - Completed N Topics With No Mistakes
        * `finished_first_in_highest_league` - Finish First In Highest League
        * `have_n_friends` - Have N Friends
        * `added_profile_picture` - Added Profile Picture
    BasicPracticeSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
        ended_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          readOnly: true
        last_activity_change_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - ended_at
      - id
      - is_active
      - last_activity_change_time
      - started_at
    BasicQuest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        challenger:
          $ref: '#/components/schemas/QuestParticipant'
        opponent:
          $ref: '#/components/schemas/QuestParticipant'
        time_limit:
          type: string
          readOnly: true
        subject:
          $ref: '#/components/schemas/BasicSubject'
        topic_count:
          type: string
          readOnly: true
      required:
      - challenger
      - id
      - opponent
      - subject
      - time_limit
      - topic_count
    BasicQuiz:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        topic_name:
          type: string
          readOnly: true
        total_questions:
          type: string
          readOnly: true
        correct_answers:
          type: string
          readOnly: true
        score_percentage:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - correct_answers
      - created_at
      - id
      - score_percentage
      - topic_name
      - total_questions
    BasicStudentTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: number
          format: double
          nullable: true
          description: |-
            Gets the student's score for the topic, i.e. the correct
            answer percentage in relation to all answers for the topic.
            :return: A float representing the score (out of 100),
            or None if no answers exist.
          readOnly: true
      required:
      - id
      - score
    BasicSubject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        image:
          type: string
          format: uri
          nullable: true
          description: Subject image/thumbnail
        images:
          type: string
          readOnly: true
        progress:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        quest_remaining_days:
          type: string
          readOnly: true
        league:
          type: string
          readOnly: true
        subject_xp:
          type: string
          readOnly: true
      required:
      - id
      - images
      - league
      - name
      - progress
      - quest_remaining_days
      - status
      - subject_xp
    BasicTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        subtitle:
          type: string
          maxLength: 300
        unit_id:
          type: integer
          nullable: true
          readOnly: true
        unit_name:
          type: string
          readOnly: true
        subject_name:
          type: string
          readOnly: true
        grade_info:
          type: string
          readOnly: true
        video_url:
          type: string
          readOnly: true
        last_quiz_score:
          type: string
          readOnly: true
        activity_text:
          type: string
          readOnly: true
      required:
      - activity_text
      - grade_info
      - id
      - last_quiz_score
      - name
      - subject_name
      - unit_id
      - unit_name
      - video_url
    BasicTopicAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text_content:
          type: string
        is_correct:
          type: boolean
          readOnly: true
          nullable: true
        correct_answer:
          type: string
          readOnly: true
        used_hint:
          type: boolean
        practice_session:
          type: integer
          nullable: true
        quiz:
          type: integer
          nullable: true
      required:
      - correct_answer
      - id
      - is_correct
      - text_content
    BasicTopicAnswerRequest:
      type: object
      properties:
        text_content:
          type: string
          minLength: 1
        used_hint:
          type: boolean
        practice_session:
          type: integer
          nullable: true
        quiz:
          type: integer
          nullable: true
      required:
      - text_content
    BasicTopicQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text_content:
          type: string
        score:
          type: string
          readOnly: true
        question_details:
          allOf:
          - $ref: '#/components/schemas/TopicQuestionDetails'
          readOnly: true
      required:
      - id
      - question_details
      - score
      - text_content
    BasicUnit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        grade:
          type: integer
          nullable: true
        subject:
          type: integer
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
          readOnly: true
      required:
      - id
      - name
      - subject
      - topics
    BasicUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 50
        organization:
          type: integer
          nullable: true
        student_id:
          type: integer
          readOnly: true
        subjects:
          type: string
          readOnly: true
        topics_mastered_yesterday:
          type: string
          readOnly: true
        percentage_of_mastery:
          type: string
          readOnly: true
        percentage_of_mastery_plus:
          type: string
          readOnly: true
        profile_pic_url:
          type: string
          nullable: true
          description: Get the user's profile picture URL
          readOnly: true
        joined_date:
          type: string
          nullable: true
          description: Get the date when the user joined (created_at)
          readOnly: true
        friends_count:
          type: integer
          nullable: true
          description: Get the number of friends the student has
          readOnly: true
        total_experience:
          type: integer
          nullable: true
          description: Get the student's total XP points
          readOnly: true
        day_streak:
          type: integer
          nullable: true
          description: Get the student's current day streak
          readOnly: true
        student_league:
          type: string
          nullable: true
          description: Get the student's current league
          readOnly: true
        total_topics:
          type: integer
          nullable: true
          description: Get the total number of topics the student has
          readOnly: true
        grade:
          type: string
          nullable: true
          description: Get the student's current grade
          readOnly: true
        mode:
          $ref: '#/components/schemas/ModeEnum'
      required:
      - day_streak
      - email
      - first_name
      - friends_count
      - grade
      - id
      - joined_date
      - last_name
      - percentage_of_mastery
      - percentage_of_mastery_plus
      - profile_pic_url
      - student_id
      - student_league
      - subjects
      - topics_mastered_yesterday
      - total_experience
      - total_topics
      - username
    CreateStudent:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - first_name
      - last_name
      - username
    CreateStudentRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 200
        last_name:
          type: string
          minLength: 1
          maxLength: 200
        student_class:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 1
        grade:
          type: integer
          maximum: 12
          minimum: 1
          writeOnly: true
        username:
          type: string
          minLength: 1
          maxLength: 50
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          writeOnly: true
      required:
      - aptitude_level
      - email
      - first_name
      - grade
      - last_name
      - password
      - student_class
      - username
    CreateTeacher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 50
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/TeacherSubject'
          readOnly: true
      required:
      - email
      - first_name
      - id
      - last_name
      - subjects
      - username
    CreateTeacherRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 200
        last_name:
          type: string
          minLength: 1
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        username:
          type: string
          minLength: 1
          maxLength: 50
        subject_ids:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - email
      - first_name
      - last_name
      - subject_ids
      - username
    CustomTokenObtainPairRequest:
      type: object
      description: Custom serializer that allows login with either username or email
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
          title: Username or Email
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    DeactivateStudentsRequest:
      type: object
      properties:
        student_ids:
          type: array
          items:
            type: integer
      required:
      - student_ids
    DetailedStudentSubject:
      type: object
      properties:
        student_id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_username:
          type: string
          readOnly: true
        student_email:
          type: string
          format: email
          readOnly: true
        percentage_of_mastery:
          type: number
          format: double
          nullable: true
          description: |-
            Gets Percentage of Mastery (POM) for the object's student and grade.
            :return: a float representing POM (out of 100), or None if no topics
            are found.
          readOnly: true
        percentage_of_mastery_plus:
          type: string
          readOnly: true
        red_topic_percentage:
          type: string
          readOnly: true
        predicted_grade_exam_mark:
          type: number
          format: double
          description: |-
            Gets Predicted Grade Exam Mark (PM) for the object's student and grade,
            using the following formula:
            MP(x) = 100*(0.35*tanh(4(x-0.5))+0.55),
            x = TGE/PNM. For x = 0 MP=0, for x = 1 or more or infinite MP = 1.

            :return: a float representing PM (out of 100).
          readOnly: true
        daily_learning_rate:
          type: integer
          description: |-
            Gets Daily Learning Rate (LRD).
            :return: an integer representing LRD
          readOnly: true
        weekly_learning_rate:
          type: integer
          description: |-
            Gets Weekly Learning Rate (LRW).
            :return: an integer representing LRW
          readOnly: true
        monthly_learning_rate:
          type: integer
          description: |-
            Gets Monthly Learning Rate (LRM).
            :return: an integer representing LRM
          readOnly: true
        time_to_grade_exam:
          type: integer
          description: |-
            Gets Time to Grade Exam in months (TGE) for the object's student and grade.

            :return: an integer representing TGE.
          readOnly: true
        predicted_number_of_months:
          type: number
          format: double
          description: |-
            Gets Predicted Number of Months (PNM) for the object's student
            to master the subject with their current Desired Exam Mark (MD),
            using the following formula:
            PNM = (1-POM/100)*TNT/LRM. By default, the beginning PNM equals the actual number of months to the exam.

            :return: an integer representing PNM.
          readOnly: true
        total_number_of_topics:
          type: integer
          description: |-
            Gets Total Number of Topics (TNT) for the object's grade.
            :return: an integer representing TNT.
          readOnly: true
        topics_mastered:
          type: integer
          readOnly: true
        time_practiced:
          type: string
          readOnly: true
        questions_answered:
          type: integer
          readOnly: true
        accuracy_percentage:
          type: number
          format: double
          readOnly: true
      required:
      - accuracy_percentage
      - daily_learning_rate
      - monthly_learning_rate
      - percentage_of_mastery
      - percentage_of_mastery_plus
      - predicted_grade_exam_mark
      - predicted_number_of_months
      - questions_answered
      - red_topic_percentage
      - student_email
      - student_id
      - student_name
      - student_username
      - time_practiced
      - time_to_grade_exam
      - topics_mastered
      - total_number_of_topics
      - weekly_learning_rate
    FollowRequest:
      type: object
      properties:
        followed_student_id:
          type: integer
        follow:
          type: boolean
          default: true
          description: Whether to follow or unfollow this student.
      required:
      - followed_student_id
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    Grade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        level:
          type: integer
          maximum: 32767
          minimum: 0
        name:
          type: string
          readOnly: true
      required:
      - id
      - level
      - name
    GradeSetRequest:
      type: object
      properties:
        grade_id:
          type: integer
      required:
      - grade_id
    Leaderboard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        type:
          $ref: '#/components/schemas/Type415Enum'
        subjects:
          type: array
          items: {}
          description: Get subject information
          readOnly: true
        grades:
          type: array
          items: {}
          description: Get grade information
          readOnly: true
        students:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardStudent'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        manually_ended:
          type: boolean
          readOnly: true
        participants_summary:
          type: object
          additionalProperties: {}
          description: Get summary of participants by level (Primary/Higher)
          readOnly: true
        total_participants:
          type: integer
          description: Get total number of participants
          readOnly: true
        status:
          type: string
          description: Get current status of the leaderboard
          readOnly: true
        duration:
          type: object
          additionalProperties: {}
          description: Get duration information
          readOnly: true
      required:
      - duration
      - end_time
      - grades
      - id
      - manually_ended
      - name
      - participants_summary
      - start_time
      - status
      - students
      - subjects
      - total_participants
      - type
    LeaderboardRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 300
        type:
          $ref: '#/components/schemas/Type415Enum'
        subject_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        grade_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
      required:
      - end_time
      - grade_ids
      - name
      - start_time
      - subject_ids
      - type
    LeaderboardResults:
      type: object
      description: Enhanced serializer for leaderboard results with detailed participant
        information
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        type:
          $ref: '#/components/schemas/Type415Enum'
        subjects:
          type: array
          items: {}
          description: Get subject information
          readOnly: true
        grades:
          type: array
          items: {}
          description: Get grade information
          readOnly: true
        students:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardStudent'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        manually_ended:
          type: boolean
        participants_summary:
          type: object
          additionalProperties: {}
          description: Get summary of participants by level (Primary/Higher)
          readOnly: true
        total_participants:
          type: integer
          description: Get total number of participants
          readOnly: true
        status:
          type: string
          description: Get current status of the leaderboard
          readOnly: true
        duration:
          type: object
          additionalProperties: {}
          description: Get duration information
          readOnly: true
        participant_groups:
          type: object
          additionalProperties: {}
          description: Get participant groups based on the leaderboard type and selection
            criteria
          readOnly: true
      required:
      - duration
      - end_time
      - grades
      - id
      - name
      - participant_groups
      - participants_summary
      - start_time
      - status
      - students
      - subjects
      - total_participants
      - type
    LeaderboardStudent:
      type: object
      properties:
        full_name:
          type: string
          readOnly: true
        score:
          type: integer
          maximum: 32767
          minimum: 0
        year:
          type: string
          readOnly: true
        progress:
          type: object
          additionalProperties: {}
          description: Get student's progress information
          readOnly: true
        teacher:
          type: object
          additionalProperties: {}
          description: Get student's teacher information
          readOnly: true
        participants:
          type: object
          additionalProperties: {}
          description: Get participants information (Primary/Higher levels)
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
        xp_points:
          type: integer
          maximum: 2147483647
          minimum: 0
          readOnly: true
        league:
          type: string
          readOnly: true
        topics_mastered:
          type: integer
          description: Get number of topics mastered by student
          readOnly: true
        completion_rate:
          type: number
          format: double
          description: Get completion rate percentage
          readOnly: true
      required:
      - avatar_url
      - completion_rate
      - full_name
      - league
      - participants
      - progress
      - teacher
      - topics_mastered
      - xp_points
      - year
    LeaderboardStudentRequest:
      type: object
      properties:
        score:
          type: integer
          maximum: 32767
          minimum: 0
    LeagueRound:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        league_name:
          type: string
          readOnly: true
        grade_level:
          type: string
          readOnly: true
        is_completed:
          type: boolean
        participants:
          type: array
          items:
            $ref: '#/components/schemas/LeagueRoundParticipant'
        days_left:
          type: string
          readOnly: true
        position:
          type: integer
          readOnly: true
        is_promoted:
          type: integer
          readOnly: true
        is_demoted:
          type: integer
          readOnly: true
      required:
      - days_left
      - grade_level
      - id
      - is_demoted
      - is_promoted
      - league_name
      - participants
      - position
    LeagueRoundParticipant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        xp_amount:
          type: integer
          maximum: 32767
          minimum: 0
      required:
      - id
      - name
    MemoryEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - High
        * `2` - Above average
        * `3` - Below average
        * `4` - Low
    ModeEnum:
      enum:
      - auto
      - manual
      type: string
      description: |-
        * `auto` - Auto
        * `manual` - Manual
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
      required:
      - content
      - id
    NullEnum:
      enum:
      - null
    Organization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        current_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        next_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        opening_hours:
          type: string
          format: time
          nullable: true
        closing_hours:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
        practice_time_per_week_in_hours:
          type: integer
          maximum: 32767
          minimum: 0
        topics_mastered_per_week:
          type: integer
          maximum: 32767
          minimum: 0
        desired_mark:
          type: number
          format: double
        login_url_name:
          type: string
          maxLength: 300
        login_welcome_header:
          type: string
          maxLength: 300
        login_welcome_message:
          type: string
          maxLength: 500
        login_logo:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
        difficulty_level_threshold:
          type: number
          format: double
      required:
      - id
      - name
      - timezone
    OrganizationRoleEnum:
      enum:
      - account_owner
      type: string
      description: '* `account_owner` - Account owner'
    PaginatedBadgeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Badge'
    PaginatedBasicQuestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicQuest'
    PaginatedBasicStudentTopicList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicStudentTopic'
    PaginatedBasicSubjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicSubject'
    PaginatedBasicTopicAnswerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicTopicAnswer'
    PaginatedBasicTopicList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicTopic'
    PaginatedBasicTopicQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicTopicQuestion'
    PaginatedBasicUnitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasicUnit'
    PaginatedDetailedStudentSubjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DetailedStudentSubject'
    PaginatedGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Grade'
    PaginatedLeaderboardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Leaderboard'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedStudentAchievementList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentAchievement'
    PaginatedStudentFollowerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentFollower'
    PaginatedStudentLeaderboardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentLeaderboard'
    PaginatedStudentListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentList'
    PaginatedStudentSubjectMasteryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentSubjectMastery'
    PaginatedSuggestedFriendList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SuggestedFriend'
    PaginatedSupportArticleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SupportArticle'
    PaginatedTopUsersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopUsers'
    ParentPinVerificationRequest:
      type: object
      properties:
        parent_pin:
          type: string
          minLength: 1
          description: The 4-digit parent PIN to verify
          maxLength: 4
      required:
      - parent_pin
    ParentSignup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    PasswordResetRequest:
      type: object
      properties:
        user_id:
          type: integer
          description: User ID (required if email not provided)
        email:
          type: string
          format: email
          minLength: 1
          description: User email (required if user_id not provided)
        password:
          type: string
          minLength: 1
          description: New password
        password_confirmation:
          type: string
          minLength: 1
          description: Password confirmation
      required:
      - password
      - password_confirmation
    PatchedAccountContactUpdateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          maxLength: 15
        organization_role:
          $ref: '#/components/schemas/OrganizationRoleEnum'
    PatchedOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 300
        current_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        next_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        opening_hours:
          type: string
          format: time
          nullable: true
        closing_hours:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
        practice_time_per_week_in_hours:
          type: integer
          maximum: 32767
          minimum: 0
        topics_mastered_per_week:
          type: integer
          maximum: 32767
          minimum: 0
        desired_mark:
          type: number
          format: double
        login_url_name:
          type: string
          maxLength: 300
        login_welcome_header:
          type: string
          maxLength: 300
        login_welcome_message:
          type: string
          maxLength: 500
        login_logo:
          type: string
          format: binary
          nullable: true
        is_active:
          type: boolean
        difficulty_level_threshold:
          type: number
          format: double
    PatchedPracticeSessionToggleActivityRequest:
      type: object
      properties:
        is_active:
          type: boolean
    PatchedSoloTeacherAccountRequest:
      type: object
      properties:
        current_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        next_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        opening_hours:
          type: string
          format: time
          nullable: true
        closing_hours:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
        practice_time_per_week_in_hours:
          type: integer
          maximum: 32767
          minimum: 0
        topics_mastered_per_week:
          type: integer
          maximum: 32767
          minimum: 0
        desired_mark:
          type: number
          format: double
        login_url_name:
          type: string
          maxLength: 300
        login_welcome_header:
          type: string
          maxLength: 300
        login_welcome_message:
          type: string
          maxLength: 500
    PatchedStudentListRequest:
      type: object
      properties:
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          nullable: true
        student_class:
          type: string
          maxLength: 1
    PatchedUpdateOrganizationLogoRequest:
      type: object
      properties:
        login_logo:
          type: string
          format: binary
          nullable: true
    PatchedUpdateSoloTeacherAccountLogoRequest:
      type: object
      properties:
        login_logo:
          type: string
          format: binary
          nullable: true
    PatchedUpdateSubjectGoalsRequest:
      type: object
      properties:
        time_practiced_goal_per_week:
          type: integer
          nullable: true
        time_practiced_goal_per_30_days:
          type: integer
          nullable: true
        topics_mastered_goal_per_week:
          type: integer
          nullable: true
        topics_mastered_goal_per_30_days:
          type: integer
          nullable: true
        exam_date:
          type: string
          format: date
        last_grade_test_score:
          type: integer
          nullable: true
    PatchedUpdateUserRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 200
        last_name:
          type: string
          minLength: 1
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        username:
          type: string
          minLength: 1
          maxLength: 50
    PatchedUserNotificationSettingsUpdateRequest:
      type: object
      properties:
        sms_enabled:
          type: boolean
        practice_reminder_enabled:
          type: boolean
        weekly_progress_enabled:
          type: boolean
        new_follower_enabled:
          type: boolean
        friend_activity_enabled:
          type: boolean
        leaderboards_enabled:
          type: boolean
        learning_tips_enabled:
          type: boolean
        streak_freeze_used_enabled:
          type: boolean
        weekend_chest_enabled:
          type: boolean
    Payment:
      type: object
      properties:
        client_secret:
          type: string
          readOnly: true
      required:
      - client_secret
    ProfileSetup:
      type: object
      description: |-
        Serializer for the second step of signup - profile setup.
        Handles role-specific profile information and returns JWT tokens.
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        student:
          allOf:
          - $ref: '#/components/schemas/StudentSignup'
          description: Only required/available if the "role" field value is "student"
      required:
      - id
      - role
    ProfileSetupRequest:
      type: object
      description: |-
        Serializer for the second step of signup - profile setup.
        Handles role-specific profile information and returns JWT tokens.
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
        student:
          allOf:
          - $ref: '#/components/schemas/StudentSignupRequest'
          description: Only required/available if the "role" field value is "student"
      required:
      - role
    QuestDetail:
      type: object
      description: Enhanced quest serializer with individual participant progress
      properties:
        id:
          type: integer
          readOnly: true
        challenger:
          type: string
          readOnly: true
        opponent:
          type: string
          readOnly: true
        time_limit:
          type: string
          readOnly: true
        time_limit_readable:
          type: string
          readOnly: true
        subject:
          $ref: '#/components/schemas/BasicSubject'
        topics:
          type: string
          readOnly: true
        topic_count:
          type: string
          readOnly: true
        is_completed:
          type: boolean
        challenger_score:
          type: integer
          maximum: 32767
          minimum: 0
        opponent_score:
          type: integer
          maximum: 32767
          minimum: 0
        winner:
          type: integer
          nullable: true
      required:
      - challenger
      - id
      - opponent
      - subject
      - time_limit
      - time_limit_readable
      - topic_count
      - topics
    QuestMessageRequest:
      type: object
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 500
      required:
      - content
    QuestParticipant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        avatar_url:
          type: string
          readOnly: true
      required:
      - avatar_url
      - first_name
      - id
      - last_name
    QuestSendGiftRequest:
      type: object
      properties:
        xp_boost:
          type: integer
          minimum: 1
      required:
      - xp_boost
    QuestionHint:
      type: object
      properties:
        hint:
          type: string
          maxLength: 500
    QuizAnswerDetail:
      type: object
      properties:
        question_id:
          type: integer
        question_text:
          type: string
        student_answer:
          type: string
        correct_answer:
          type: string
        is_correct:
          type: boolean
        used_hint:
          type: boolean
      required:
      - correct_answer
      - is_correct
      - question_id
      - question_text
      - student_answer
      - used_hint
    QuizResults:
      type: object
      properties:
        quiz_id:
          type: integer
        total_questions:
          type: integer
        correct_answers:
          type: integer
        score_percentage:
          type: number
          format: double
        answers:
          type: array
          items:
            $ref: '#/components/schemas/QuizAnswerDetail'
      required:
      - answers
      - correct_answers
      - quiz_id
      - score_percentage
      - total_questions
    ReasonEnum:
      enum:
      - avatar
      - spam
      - other
      type: string
      description: |-
        * `avatar` - Avatar
        * `spam` - Spam
        * `other` - Other
    ResendForgotPasswordTokenRequest:
      type: object
      description: |-
        Serializer for resending forgot password tokens.

        This serializer validates the email field and ensures it's properly formatted.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: User's email address to resend the password reset token to
      required:
      - email
    RoleEnum:
      enum:
      - student
      - parent
      - teacher
      - admin
      - super_admin
      - editor
      - chief_editor
      type: string
      description: |-
        * `student` - Student
        * `parent` - Parent
        * `teacher` - Teacher
        * `admin` - Admin
        * `super_admin` - Super Admin
        * `editor` - Editor
        * `chief_editor` - Chief Editor
    SetStudentTopicsRequest:
      type: object
      properties:
        topic_ids:
          type: array
          items:
            type: integer
      required:
      - topic_ids
    Signup:
      type: object
      description: Adds nested create feature
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        student:
          allOf:
          - $ref: '#/components/schemas/StudentSignup'
          description: Only required/available if the "role" field value is "student"
        teacher:
          allOf:
          - $ref: '#/components/schemas/TeacherSignup'
          description: Only required/available if the "role" field value is "teacher"
        parent:
          allOf:
          - $ref: '#/components/schemas/ParentSignup'
          description: Only required/available if the "role" field value is "parent"
      required:
      - email
      - first_name
      - id
      - last_name
      - role
    SignupRequest:
      type: object
      description: Adds nested create feature
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 200
        last_name:
          type: string
          minLength: 1
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        student:
          allOf:
          - $ref: '#/components/schemas/StudentSignupRequest'
          description: Only required/available if the "role" field value is "student"
      required:
      - email
      - first_name
      - last_name
      - password
      - role
    SoloTeacherAccount:
      type: object
      properties:
        current_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        next_school_year_first_day:
          type: string
          format: date-time
          nullable: true
        opening_hours:
          type: string
          format: time
          nullable: true
        closing_hours:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
        practice_time_per_week_in_hours:
          type: integer
          maximum: 32767
          minimum: 0
        topics_mastered_per_week:
          type: integer
          maximum: 32767
          minimum: 0
        desired_mark:
          type: number
          format: double
        login_url_name:
          type: string
          maxLength: 300
        login_welcome_header:
          type: string
          maxLength: 300
        login_welcome_message:
          type: string
          maxLength: 500
      required:
      - timezone
    StreamTopic:
      type: object
      description: Enhanced serializer for stream-topics API with grade info, video
        URL, last quiz score, and activity data
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        subtitle:
          type: string
          maxLength: 300
        unit_id:
          type: integer
          nullable: true
          readOnly: true
        unit_name:
          type: string
          readOnly: true
        subject_name:
          type: string
          readOnly: true
        grade_info:
          type: string
          readOnly: true
        video_url:
          type: string
          readOnly: true
        last_quiz_score:
          type: string
          readOnly: true
        activity_text:
          type: string
          readOnly: true
      required:
      - activity_text
      - grade_info
      - id
      - last_quiz_score
      - name
      - subject_name
      - unit_id
      - unit_name
      - video_url
    StudentAchievement:
      type: object
      properties:
        subject_name:
          type: string
        grade_level:
          type: integer
        percentage_of_mastery:
          type: number
          format: double
      required:
      - grade_level
      - percentage_of_mastery
      - subject_name
    StudentActivity:
      type: object
      properties:
        data:
          type: array
          items:
            type: integer
          readOnly: true
        labels:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - data
      - labels
    StudentAnalytics:
      type: object
      properties:
        questions_answered_per_student:
          type: object
          properties:
            lowest_point:
              type: integer
            goal:
              type: integer
            labels:
              type: array
              items:
                type: string
            data:
              type: array
              items:
                type: integer
          required:
          - data
          - goal
          - labels
          - lowest_point
          readOnly: true
        students:
          type: array
          items:
            type: object
            properties:
              student_name:
                type: string
              teacher_names:
                type: string
              year:
                type: string
              subjects:
                type: array
                items:
                  type: object
                  properties:
                    subject_name:
                      type: string
                    questions_answered:
                      type: integer
                    questions_answered_per_week:
                      type: integer
                    total_time_spent:
                      type: string
                    time_spent_per_week:
                      type: string
                  required:
                  - questions_answered
                  - questions_answered_per_week
                  - subject_name
                  - time_spent_per_week
                  - total_time_spent
            required:
            - student_name
            - subjects
            - teacher_names
            - year
          readOnly: true
      required:
      - questions_answered_per_student
      - students
    StudentAnalyticsForTeacher:
      type: object
      properties:
        questions_answered:
          type: object
          properties:
            data:
              type: array
              items:
                type: integer
            labels:
              type: array
              items:
                type: string
            avg:
              oneOf:
              - type: integer
              - type: number
                format: double
            goal:
              type: integer
          required:
          - avg
          - data
          - goal
          - labels
          readOnly: true
          description: Only available if the teacher is a solo teacher.
        homework_questions:
          type: object
          properties:
            data:
              type: array
              items:
                type: integer
            labels:
              type: array
              items:
                type: string
            avg:
              oneOf:
              - type: integer
              - type: number
                format: double
            goal:
              type: integer
          required:
          - avg
          - data
          - goal
          - labels
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        classroom_questions:
          type: object
          properties:
            data:
              type: array
              items:
                type: integer
            labels:
              type: array
              items:
                type: string
            avg:
              oneOf:
              - type: integer
              - type: number
                format: double
            goal:
              type: integer
          required:
          - avg
          - data
          - goal
          - labels
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        homework_to_classwork_questions:
          type: object
          properties:
            homework:
              type: integer
            classwork:
              type: integer
          required:
          - classwork
          - homework
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        homework_to_classwork_time:
          type: object
          properties:
            homework_time:
              type: integer
            classwork_time:
              type: integer
          required:
          - classwork_time
          - homework_time
          nullable: true
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        teacher_engagement:
          type: integer
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        difficult_topic_leaderboard:
          type: array
          items:
            type: object
            properties:
              subject_name:
                type: string
              topics:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    name:
                      type: string
                    student_names:
                      type: array
                      items:
                        type: string
                  required:
                  - code
                  - name
                  - student_names
            required:
            - subject_name
            - topics
          readOnly: true
      required:
      - classroom_questions
      - difficult_topic_leaderboard
      - homework_questions
      - homework_to_classwork_questions
      - homework_to_classwork_time
      - questions_answered
      - teacher_engagement
    StudentFollower:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        avatar:
          type: string
          readOnly: true
        xp_points:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_friends:
          type: boolean
          readOnly: true
          description: Whether this student is a friend of the current user.
      required:
      - avatar
      - id
      - is_friends
      - name
    StudentLeaderboard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        type:
          $ref: '#/components/schemas/Type415Enum'
        subjects:
          type: array
          items:
            type: integer
          readOnly: true
        grades:
          type: array
          items:
            type: integer
          readOnly: true
        students:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardStudent'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
      required:
      - end_time
      - grades
      - id
      - name
      - start_time
      - students
      - subjects
      - type
    StudentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        username:
          type: string
          readOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          readOnly: true
        grade:
          type: integer
          readOnly: true
        subjects:
          type: array
          items:
            type: integer
          readOnly: true
        teachers:
          type: array
          items:
            type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
        modified_at:
          type: string
          readOnly: true
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          nullable: true
        student_class:
          type: string
          maxLength: 1
      required:
      - created_at
      - email
      - first_name
      - grade
      - id
      - is_active
      - last_name
      - modified_at
      - subjects
      - teachers
      - username
    StudentProgress:
      type: object
      properties:
        practice_by_day:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  attempted:
                    type: integer
                  correct:
                    type: integer
                required:
                - attempted
                - correct
            labels:
              type: array
              items:
                type: string
          required:
          - data
          - labels
          readOnly: true
        homework_to_classwork_questions:
          type: object
          properties:
            homework:
              type: integer
            classwork:
              type: integer
          required:
          - classwork
          - homework
          nullable: true
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        homework_to_classwork_time:
          type: object
          properties:
            homework_time:
              type: integer
            classwork_time:
              type: integer
          required:
          - classwork_time
          - homework_time
          nullable: true
          readOnly: true
          description: Only available if the teacher is an organizational teacher.
        percentage_of_mastery_plus:
          type: number
          format: double
          nullable: true
          readOnly: true
        quest_count:
          type: string
          readOnly: true
        topics_by_mastery:
          type: object
          additionalProperties:
            type: integer
          readOnly: true
        progress_to_date:
          type: object
          properties:
            mastery:
              type: number
              format: double
            mastery_plus:
              type: number
              format: double
            red:
              type: number
              format: double
            depth:
              type: number
              format: double
            streak:
              type: integer
            quests:
              type: integer
            creativity:
              type: number
              format: double
            memory:
              type: integer
            aptitude:
              type: integer
          required:
          - aptitude
          - creativity
          - depth
          - mastery
          - mastery_plus
          - memory
          - quests
          - red
          - streak
          readOnly: true
        goals:
          type: object
          properties:
            mark:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            topics_mastered_last_week:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            topics_mastered_last_30_days:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            practice_time_last_week:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            practice_time_last_30_days:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            time_to_exam:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            last_grade_test_score:
              type: integer
              nullable: true
          required:
          - last_grade_test_score
          - mark
          - practice_time_last_30_days
          - practice_time_last_week
          - time_to_exam
          - topics_mastered_last_30_days
          - topics_mastered_last_week
          readOnly: true
        units_and_topics:
          type: object
          properties:
            units:
              type: array
              items:
                type: object
                properties:
                  unit_name:
                    type: string
                  topics:
                    type: array
                    items:
                      type: object
                      properties:
                        topic_name:
                          type: string
                        status:
                          enum:
                          - white
                          - red
                          - yellow
                          - green
                          - evergreen
                          - gray
                          type: string
                      required:
                      - status
                      - topic_name
                required:
                - topics
                - unit_name
          required:
          - units
          readOnly: true
      required:
      - goals
      - homework_to_classwork_questions
      - homework_to_classwork_time
      - percentage_of_mastery_plus
      - practice_by_day
      - progress_to_date
      - quest_count
      - topics_by_mastery
      - units_and_topics
    StudentPublicProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        organization_name:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          readOnly: true
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/BasicSubject'
          readOnly: true
        follower_count:
          type: integer
          readOnly: true
        following_count:
          type: integer
          readOnly: true
        is_following:
          type: boolean
          readOnly: true
          description: Whether this student follows the current user.
        is_friend:
          type: boolean
          readOnly: true
          description: Whether this student is a friend of the current user.
        day_streak:
          type: integer
          readOnly: true
        xp_points:
          type: integer
          maximum: 2147483647
          minimum: 0
        topics_mastered_yesterday:
          type: integer
          readOnly: true
        league:
          type: string
          readOnly: true
        percentage_of_mastery:
          type: number
          format: double
          nullable: true
          readOnly: true
        percentage_of_mastery_plus:
          type: number
          format: double
          nullable: true
          readOnly: true
      required:
      - created_at
      - day_streak
      - follower_count
      - following_count
      - full_name
      - id
      - is_following
      - is_friend
      - league
      - organization_name
      - percentage_of_mastery
      - percentage_of_mastery_plus
      - subjects
      - topics_mastered_yesterday
    StudentSignup:
      type: object
      properties:
        user:
          type: integer
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          nullable: true
        school_name:
          type: string
          maxLength: 300
        grade_level:
          type: integer
          maximum: 12
          minimum: 1
        subject_ids:
          type: array
          items:
            type: integer
          minItems: 1
        estimated_exam_date:
          type: string
          format: date
          nullable: true
        desired_exam_mark:
          type: integer
          maximum: 100
          minimum: 50
          nullable: true
      required:
      - aptitude_level
      - grade_level
      - school_name
      - subject_ids
    StudentSignupRequest:
      type: object
      properties:
        user:
          type: integer
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          nullable: true
        parent_pin:
          type: string
          writeOnly: true
          maxLength: 4
        school_name:
          type: string
          minLength: 1
          maxLength: 300
        grade_level:
          type: integer
          maximum: 12
          minimum: 1
        subject_ids:
          type: array
          items:
            type: integer
          minItems: 1
        estimated_exam_date:
          type: string
          format: date
          nullable: true
        desired_exam_mark:
          type: integer
          maximum: 100
          minimum: 50
          nullable: true
      required:
      - aptitude_level
      - grade_level
      - school_name
      - subject_ids
    StudentSubjectGoals:
      type: object
      properties:
        progress_to_date:
          type: object
          properties:
            mastery:
              type: number
              format: double
            mastery_plus:
              type: number
              format: double
            red:
              type: number
              format: double
            depth:
              type: number
              format: double
            streak:
              type: integer
            quests:
              type: integer
            creativity:
              type: number
              format: double
            memory:
              type: integer
            aptitude:
              type: integer
          required:
          - aptitude
          - creativity
          - depth
          - mastery
          - mastery_plus
          - memory
          - quests
          - red
          - streak
          readOnly: true
        goals:
          type: object
          properties:
            mark:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            topics_mastered_last_week:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            topics_mastered_last_30_days:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            practice_time_last_week:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            practice_time_last_30_days:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            time_to_exam:
              type: object
              properties:
                actual:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
                predicted:
                  oneOf:
                  - type: integer
                  - type: number
                    format: double
              required:
              - actual
              - predicted
            last_grade_test_score:
              type: integer
              nullable: true
          required:
          - last_grade_test_score
          - mark
          - practice_time_last_30_days
          - practice_time_last_week
          - time_to_exam
          - topics_mastered_last_30_days
          - topics_mastered_last_week
          readOnly: true
      required:
      - goals
      - progress_to_date
    StudentSubjectMastery:
      type: object
      properties:
        subject_name:
          type: string
          readOnly: true
        percentage_of_mastery:
          type: number
          format: double
          nullable: true
          description: ' '
          readOnly: true
        total_hours:
          type: string
          readOnly: true
      required:
      - percentage_of_mastery
      - subject_name
      - total_hours
    StudentTimePracticed:
      type: object
      properties:
        last_7_days_practice_time:
          type: string
          readOnly: true
        practice_time_by_subject:
          type: array
          items:
            type: object
            properties:
              subject_name:
                type: string
              time_practiced:
                type: string
            required:
            - subject_name
            - time_practiced
          readOnly: true
      required:
      - last_7_days_practice_time
      - practice_time_by_subject
    StudentTopicMasteryLevel:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              mastery_level:
                type: integer
            required:
            - label
            - mastery_level
          readOnly: true
      required:
      - data
    StudentTopicsMastered:
      type: object
      properties:
        topics_mastered_last_7_days:
          type: integer
          readOnly: true
        topics_mastered_by_subject:
          type: array
          items:
            type: object
            properties:
              subject_name:
                type: string
              topics_mastered:
                type: integer
            required:
            - subject_name
            - topics_mastered
          readOnly: true
      required:
      - topics_mastered_by_subject
      - topics_mastered_last_7_days
    StudentXPStatistics:
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
          readOnly: true
        data:
          type: string
          readOnly: true
      required:
      - data
      - labels
    SubjectGoalsUpdateRequest:
      type: object
      properties:
        grade_level:
          type: integer
        grade_exam_at:
          type: string
          format: date
          nullable: true
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          nullable: true
        desired_exam_mark:
          type: number
          format: double
        last_grade_test_score:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        time_practiced_goal_per_week:
          type: integer
          nullable: true
        time_practiced_goal_per_30_days:
          type: integer
          nullable: true
        topics_mastered_goal_per_week:
          type: integer
          nullable: true
        topics_mastered_goal_per_30_days:
          type: integer
          nullable: true
      required:
      - grade_level
    SubjectQuestionAnalytics:
      type: object
      properties:
        summary:
          type: object
          additionalProperties: {}
          description: Get overall summary statistics for the last 7 days
          readOnly: true
        daily_breakdown:
          type: object
          additionalProperties: {}
          description: Get daily breakdown of questions answered and performance
          readOnly: true
        performance_metrics:
          type: object
          additionalProperties: {}
          description: Get additional performance insights
          readOnly: true
      required:
      - daily_breakdown
      - performance_metrics
      - summary
    SuggestedFriend:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        avatar:
          type: string
          readOnly: true
        is_following:
          type: boolean
          readOnly: true
      required:
      - avatar
      - id
      - is_following
      - name
    SupportArticle:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
        category:
          type: string
          readOnly: true
        author:
          $ref: '#/components/schemas/SupportArticleAuthor'
      required:
      - author
      - category
      - content
      - title
    SupportArticleAuthor:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
      required:
      - first_name
      - last_name
    SupportTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          maxLength: 100
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 15
        type:
          $ref: '#/components/schemas/SupportTicketTypeEnum'
        subject:
          type: string
          maxLength: 100
        message:
          type: string
          maxLength: 1000
        attachment:
          type: string
          format: uri
          nullable: true
      required:
      - email
      - full_name
      - id
      - message
      - phone
      - subject
      - type
      - username
    SupportTicketRequest:
      type: object
      properties:
        full_name:
          type: string
          minLength: 1
          maxLength: 100
        username:
          type: string
          minLength: 1
          maxLength: 50
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          minLength: 1
          maxLength: 15
        type:
          $ref: '#/components/schemas/SupportTicketTypeEnum'
        subject:
          type: string
          minLength: 1
          maxLength: 100
        message:
          type: string
          minLength: 1
          maxLength: 1000
        attachment:
          type: string
          format: binary
          nullable: true
      required:
      - email
      - full_name
      - message
      - phone
      - subject
      - type
      - username
    SupportTicketTypeEnum:
      enum:
      - account_management
      type: string
      description: '* `account_management` - Account Management'
    TeacherAnalytics:
      type: object
      properties:
        homework_questions:
          type: object
          properties:
            labels:
              type: array
              items:
                type: string
            data:
              type: array
              items:
                type: integer
            goal:
              type: integer
            avg:
              type: integer
          required:
          - avg
          - data
          - goal
          - labels
          readOnly: true
        classroom_questions:
          type: object
          properties:
            labels:
              type: array
              items:
                type: string
            data:
              type: array
              items:
                type: integer
            goal:
              type: integer
            avg:
              type: integer
          required:
          - avg
          - data
          - goal
          - labels
          readOnly: true
        homework_to_classwork_questions:
          type: string
          readOnly: true
        homework_to_classwork_time:
          type: string
          readOnly: true
        teacher_engagement:
          type: integer
          readOnly: true
        difficult_topic_leaderboard:
          type: array
          items:
            type: object
            properties:
              subject_name:
                type: string
              topics:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    name:
                      type: string
                    student_names:
                      type: array
                      items:
                        type: string
                  required:
                  - code
                  - name
                  - student_names
            required:
            - subject_name
            - topics
          readOnly: true
      required:
      - classroom_questions
      - difficult_topic_leaderboard
      - homework_questions
      - homework_to_classwork_questions
      - homework_to_classwork_time
      - teacher_engagement
    TeacherDetail:
      type: object
      description: Comprehensive serializer for detailed teacher information
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          readOnly: true
        phone:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
          nullable: true
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        organization_id:
          type: integer
          readOnly: true
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/BasicSubject'
        total_students:
          type: integer
          description: Get total number of students assigned to this teacher
          readOnly: true
        engagement_score:
          type: string
          readOnly: true
        analytics_summary:
          type: object
          additionalProperties: {}
          description: Get comprehensive analytics summary for the teacher
          readOnly: true
        student_progress_summary:
          type: object
          additionalProperties: {}
          description: Get summary of student progress by subject
          readOnly: true
        created_at:
          type: string
          description: Format created_at timestamp
          readOnly: true
        modified_at:
          type: string
          description: Format modified_at timestamp
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
          readOnly: true
      required:
      - analytics_summary
      - avatar_url
      - created_at
      - date_of_birth
      - email
      - engagement_score
      - first_name
      - full_name
      - id
      - is_active
      - last_login
      - last_name
      - modified_at
      - organization_id
      - organization_name
      - phone
      - student_progress_summary
      - subjects
      - total_students
      - username
    TeacherEngagement:
      type: object
      properties:
        total_engagement:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              score:
                type: integer
            required:
            - score
            - status
          readOnly: true
        engagement_items:
          type: array
          items:
            type: object
            properties:
              teacher_name:
                type: string
              score:
                type: integer
            required:
            - score
            - teacher_name
          readOnly: true
      required:
      - engagement_items
      - total_engagement
    TeacherList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          readOnly: true
        total_students:
          type: integer
          readOnly: true
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/BasicSubject'
        created_at:
          type: string
          readOnly: true
        modified_at:
          type: string
          readOnly: true
      required:
      - created_at
      - email
      - full_name
      - id
      - is_active
      - modified_at
      - subjects
      - total_students
      - username
    TeacherPasswordResetRequest:
      type: object
      properties:
        teacher_ids:
          type: array
          items:
            type: integer
      required:
      - teacher_ids
    TeacherSignup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    TeacherStudent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        year:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
      required:
      - email
      - full_name
      - id
      - username
      - year
    TeacherStudentSubject:
      type: object
      properties:
        student_id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_mode:
          type: string
          readOnly: true
        percentage_of_mastery:
          type: number
          format: double
          nullable: true
          description: |-
            Gets Percentage of Mastery (POM) for the object's student and grade.
            :return: a float representing POM (out of 100), or None if no topics
            are found.
          readOnly: true
        red_topic_percentage:
          type: string
          readOnly: true
        depth_of_mastery:
          type: number
          format: double
          description: |-
            DSM: Depth of the subject mastery reflects the average
            difficulty levels of correctly answered questions for the subject.
            :return:
          readOnly: true
        desired_exam_mark:
          type: number
          format: double
        predicted_grade_exam_mark:
          type: number
          format: double
          description: |-
            Gets Predicted Grade Exam Mark (PM) for the object's student and grade,
            using the following formula:
            MP(x) = 100*(0.35*tanh(4(x-0.5))+0.55),
            x = TGE/PNM. For x = 0 MP=0, for x = 1 or more or infinite MP = 1.

            :return: a float representing PM (out of 100).
          readOnly: true
        time_to_grade_exam:
          type: integer
          description: |-
            Gets Time to Grade Exam in months (TGE) for the object's student and grade.

            :return: an integer representing TGE.
          readOnly: true
        predicted_number_of_months:
          type: number
          format: double
          description: |-
            Gets Predicted Number of Months (PNM) for the object's student
            to master the subject with their current Desired Exam Mark (MD),
            using the following formula:
            PNM = (1-POM/100)*TNT/LRM. By default, the beginning PNM equals the actual number of months to the exam.

            :return: an integer representing PNM.
          readOnly: true
        time_practiced:
          type: string
          readOnly: true
        time_practiced_goal_per_week:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        topics_mastered:
          type: integer
          readOnly: true
        topics_mastered_goal_per_week:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          nullable: true
        memory:
          nullable: true
          readOnly: true
          oneOf:
          - $ref: '#/components/schemas/MemoryEnum'
          - $ref: '#/components/schemas/NullEnum'
        creativity_score:
          type: integer
          description: |-
            Cr shows creativity: the number of Olympiad level questions
            the students solved correctly for the subject. Olympiad questions
            are optional for students and don’t affect their key parameters but add
            up to their Creativity score Cr.
            :return:
          readOnly: true
        quest_count:
          type: integer
          readOnly: true
        subject_name:
          type: string
          readOnly: true
        subject:
          type: integer
          nullable: true
      required:
      - creativity_score
      - depth_of_mastery
      - memory
      - percentage_of_mastery
      - predicted_grade_exam_mark
      - predicted_number_of_months
      - quest_count
      - red_topic_percentage
      - student_id
      - student_mode
      - student_name
      - subject_name
      - time_practiced
      - time_to_grade_exam
      - topics_mastered
    TeacherSubject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
      required:
      - id
      - name
    TeacherSubjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 300
      required:
      - name
    ToggleStudentStatusRequest:
      type: object
      properties:
        is_active:
          type: boolean
          writeOnly: true
      required:
      - is_active
    ToggleTeacherStatusRequest:
      type: object
      properties:
        is_active:
          type: boolean
          writeOnly: true
      required:
      - is_active
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    TopUsers:
      type: object
      description: Serializer for top 3 users with enhanced profile information
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
        score:
          type: integer
          maximum: 32767
          minimum: 0
        xp_points:
          type: integer
          maximum: 2147483647
          minimum: 0
          readOnly: true
        league:
          type: string
          readOnly: true
        grade_info:
          type: object
          additionalProperties: {}
          description: Get student's grade information
          readOnly: true
        teacher_info:
          type: object
          additionalProperties: {}
          description: Get student's teacher information
          readOnly: true
        achievements:
          type: object
          additionalProperties: {}
          description: Get student's achievements and progress
          readOnly: true
        rank:
          type: integer
          description: Get the rank of this student in the leaderboard
          readOnly: true
      required:
      - achievements
      - avatar_url
      - full_name
      - grade_info
      - id
      - league
      - rank
      - teacher_info
      - xp_points
    Topic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        subtitle:
          type: string
          maxLength: 300
      required:
      - id
      - name
    TopicQuestionDetails:
      type: object
      properties:
        choices:
          type: array
          items:
            type: string
          readOnly: true
          description: Available only if the question type is "choice"
      required:
      - choices
    Type415Enum:
      enum:
      - individuals
      - classes
      type: string
      description: |-
        * `individuals` - Individuals
        * `classes` - Classes
    UpdatePasswordRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
        new_password_confirmation:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
      - new_password_confirmation
    UpdateStudentRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 200
        last_name:
          type: string
          minLength: 1
          maxLength: 200
        student_class:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 1
        grade:
          type: integer
          maximum: 12
          minimum: 1
          writeOnly: true
        username:
          type: string
          minLength: 1
          maxLength: 50
        password:
          type: string
          minLength: 1
          maxLength: 128
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        aptitude_level:
          type: integer
          maximum: 4
          minimum: 1
          writeOnly: true
      required:
      - aptitude_level
      - email
      - first_name
      - grade
      - last_name
      - password
      - student_class
      - username
    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 50
    UploadProfilePicRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
      required:
      - avatar
    UserNotificationToggleRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: Set to True to enable all notifications, False to disable all
            notifications
      required:
      - enabled
    UserReport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reporter_id:
          type: integer
          nullable: true
          readOnly: true
        reported_user_id:
          type: integer
          nullable: true
          readOnly: true
        reason:
          $ref: '#/components/schemas/ReasonEnum'
        other_reason:
          type: string
          description: Used when the reason is "other".
          maxLength: 500
      required:
      - id
      - reason
      - reported_user_id
      - reporter_id
    UserReportRequest:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/ReasonEnum'
        other_reason:
          type: string
          minLength: 1
          description: Used when the reason is "other".
          maxLength: 500
      required:
      - reason
    UserSetModeRequest:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ModeEnum'
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
